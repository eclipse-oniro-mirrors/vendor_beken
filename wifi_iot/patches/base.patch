diff --git a/base/security/deviceauth/frameworks/deviceauth_lite/source/BUILD.gn b/base/security/deviceauth/frameworks/deviceauth_lite/source/BUILD.gn
index 0c9b2bf34..c8b130067 100755
--- a/base/security/deviceauth/frameworks/deviceauth_lite/source/BUILD.gn
+++ b/base/security/deviceauth/frameworks/deviceauth_lite/source/BUILD.gn
@@ -81,6 +81,9 @@ config("hichain_config") {
     "_CUT_REMOVE_",
     "_CUT_ADD_",
     "_CUT_LOG_",
+    "_CUT_STS_SERVER_",
+    "_CUT_STS_",
+    "_CUT_EXCHANGE_",
   ]
 }
 
diff --git a/base/security/huks/frameworks/huks_lite/BUILD.gn b/base/security/huks/frameworks/huks_lite/BUILD.gn
index 772e46733..197527571 100755
--- a/base/security/huks/frameworks/huks_lite/BUILD.gn
+++ b/base/security/huks/frameworks/huks_lite/BUILD.gn
@@ -17,7 +17,7 @@ import("//build/lite/config/component/lite_component.gni")
 
 lite_component("huks_sdk") {
   if (ohos_kernel_type == "liteos_m") {
-    features = []
+    features = [ "source:huks_static" ]
   } else {
     features = [ "source:huks" ]
   }
diff --git a/base/security/huks/frameworks/huks_lite/source/BUILD.gn b/base/security/huks/frameworks/huks_lite/source/BUILD.gn
index ab7104a4c..38b66de05 100755
--- a/base/security/huks/frameworks/huks_lite/source/BUILD.gn
+++ b/base/security/huks/frameworks/huks_lite/source/BUILD.gn
@@ -21,13 +21,12 @@ config("soft_huks_config") {
     "hw_keystore_sdk/soft_service",
     "//third_party/bounds_checking_function/include",
     "//base/security/huks/interfaces/innerkits/huks_lite",
+    "//third_party/mbedtls/include",
   ]
 
   defines = [ "_FORTIFY_SOURCE = 2" ]
 
   cflags = [
-    "-fvisibility=hidden",
-    "-flto",
     "-Wall",
   ]
 }
@@ -36,7 +35,7 @@ config("public_huks_config") {
   include_dirs = [ "//base/security/huks/interfaces/innerkits/huks_lite" ]
 }
 
-shared_library("huks") {
+static_library("huks_static") {
   sources = [
     "hw_keystore_sdk/common/hks_bn.c",
     "hw_keystore_sdk/common/hks_common.c",
@@ -53,9 +52,6 @@ shared_library("huks") {
   configs += [ ":soft_huks_config" ]
 
   public_deps = [
-    "//build/lite/config/component/openssl:openssl_shared",
-    "//third_party/bounds_checking_function:libsec_shared",
-    "//third_party/mbedtls:mbedtls_shared",
   ]
 
   public_configs = [ ":public_huks_config" ]
diff --git a/base/security/huks/frameworks/huks_lite/source/hw_keystore_sdk/common/hks_common.h b/base/security/huks/frameworks/huks_lite/source/hw_keystore_sdk/common/hks_common.h
index 8a7fb4cfc..986a2d545 100755
--- a/base/security/huks/frameworks/huks_lite/source/hw_keystore_sdk/common/hks_common.h
+++ b/base/security/huks/frameworks/huks_lite/source/hw_keystore_sdk/common/hks_common.h
@@ -34,6 +34,7 @@
 #include <mbedtls/ripemd160.h>
 #include <mbedtls/sha256.h>
 #include <mbedtls/sha512.h>
+#include <mbedtls/ecp.h>
 
 #include "hks_hardware_api.h"
 
diff --git a/base/security/huks/frameworks/huks_lite/source/hw_keystore_sdk/soft_service/hks_service.c b/base/security/huks/frameworks/huks_lite/source/hw_keystore_sdk/soft_service/hks_service.c
index 0d4b8b740..6728ed99c 100755
--- a/base/security/huks/frameworks/huks_lite/source/hw_keystore_sdk/soft_service/hks_service.c
+++ b/base/security/huks/frameworks/huks_lite/source/hw_keystore_sdk/soft_service/hks_service.c
@@ -15,7 +15,7 @@
 
 #include "hks_service.h"
 
-#include <ec_local.h>
+//#include <ec_local.h>
 #include <mbedtls/ctr_drbg.h>
 #include <mbedtls/ecdh.h>
 #include <mbedtls/entropy.h>
@@ -66,6 +66,23 @@ static int32_t hks_service_verify_with_alias(const struct hks_blob *key_alias,
     struct hks_blob *public_key,
     struct hks_key_param *param, struct hks_storage_key_info *key_info);
 
+static void ED25519_public_from_private(char *dst, char *src)
+{
+	//printf("dummy ED25519_public_from_private\n");
+	return;
+}
+
+static int ED25519_sign(uint8_t *signature, uint8_t *hash, int hash_size, uint8_t *private_key, uint8_t *private_key2)
+{
+	return HKS_BOOL_TRUE;
+}
+
+static int ED25519_verify(uint8_t *hash, int hash_size, uint8_t *signature, uint8_t *public_key)
+{
+	return HKS_BOOL_TRUE;
+}
+
+
 int32_t hks_service_generate_key(const struct hks_blob *key_alias,
     const struct hks_key_param *key_param)
 {
diff --git a/base/security/huks/frameworks/huks_lite/source/hw_keystore_sdk/soft_service/hks_storage.c b/base/security/huks/frameworks/huks_lite/source/hw_keystore_sdk/soft_service/hks_storage.c
index ec51613cd..db9615d15 100755
--- a/base/security/huks/frameworks/huks_lite/source/hw_keystore_sdk/soft_service/hks_storage.c
+++ b/base/security/huks/frameworks/huks_lite/source/hw_keystore_sdk/soft_service/hks_storage.c
@@ -122,28 +122,67 @@ static uint16_t hks_get_key_slot_len(void)
 /* Caution: only used in local machine, endian is not considerred */
 static inline uint32_t hks_blob_write_uint32(uint8_t *buf, uint32_t value)
 {
-    *((uint32_t *)buf) = value;
+//    *((uint32_t *)buf) = value;
+#if BYTE_ORDER == LITTLE_ENDIAN
+
+	buf[0] = value&0xff;
+	buf[1] = (value>>8)&0xff;
+	buf[2] = (value>>16)&0xff;
+	buf[3] = (value>>24)&0xff;
+#elif   BYTE_ORDER == BIG_ENDIAN
+	buf[3] = value&0xff;
+	buf[2] = (value>>8)&0xff;
+	buf[1] = (value>>16)&0xff;
+	buf[0] = (value>>24)&0xff;
+
+#endif
+
     return sizeof(value);
 }
 
 /* Caution: only used in local machine, endian is not considerred */
 static inline uint32_t hks_blob_read_uint32(uint32_t *value, const uint8_t *buf)
 {
-    *value = *((uint32_t *)buf);
+//    *value = *((uint32_t *)buf);
+#if BYTE_ORDER == LITTLE_ENDIAN
+	*value = buf[0] | \
+				buf[1]<<8 |\
+				buf[2]<<16 |\
+				buf[3]<<24 ;
+#elif   BYTE_ORDER == BIG_ENDIAN
+	*value = buf[3] | \
+				buf[2]<<8 |\
+				buf[1]<<16 |\
+				buf[0]<<24 ;
+#endif
     return sizeof(uint32_t);
 }
 
 /* Caution: only used in local machine, endian is not considerred */
 static inline uint32_t hks_blob_write_uint16(uint8_t *buf, uint16_t value)
 {
-    *((uint16_t *)buf) = value;
+//    *((uint16_t *)buf) = value;
+#if BYTE_ORDER == LITTLE_ENDIAN
+	buf[0] = value&0xff;
+	buf[1] = (value>>8)&0xff;
+#elif   BYTE_ORDER == BIG_ENDIAN
+	buf[1] = value&0xff;
+	buf[0] = (value>>8)&0xff;
+#endif
     return sizeof(value);
 }
 
 /* Caution: only used in local machine, endian is not considerred */
 static inline uint32_t hks_blob_read_uint16(uint16_t *value, const uint8_t *buf)
 {
-    *value = *((uint16_t *)buf);
+//    *value = *((uint16_t *)buf);
+#if BYTE_ORDER == LITTLE_ENDIAN
+	*value = buf[0] | \
+				buf[1]<<8;
+#elif   BYTE_ORDER == BIG_ENDIAN
+	*value = buf[1] | \
+				buf[0]<<8;
+#endif
     return sizeof(uint16_t);
 }
 
diff --git a/base/startup/syspara_lite/frameworks/parameter/src/parameter_common.c b/base/startup/syspara_lite/frameworks/parameter/src/parameter_common.c
index cecd601c1..67cc86eac 100755
--- a/base/startup/syspara_lite/frameworks/parameter/src/parameter_common.c
+++ b/base/startup/syspara_lite/frameworks/parameter/src/parameter_common.c
@@ -23,7 +23,7 @@
 #define VERSION_ID_LEN 256
 #define PROPERTY_MAX_LENGTH 2048
 
-static char g_roBuildOs[] = {"OpenHarmony"};
+static char g_roBuildOs[] = {"openHarmony-master"};
 static char g_roBuildVerShow[] = {"OpenHarmony_release 1.1.0"};
 static char g_roSdkApiLevel[] = {"3"};
 static char g_roFirstApiLevel[] = {"1"};
